From: SLOW-32 Project
Date: September 5, 2025
Subject: Add SLOW-32 target registration to LLVM

This patch registers SLOW-32 as an experimental target in LLVM.
Apply after copying the SLOW32/ directory to llvm/lib/Target/

---
diff --git a/llvm/CMakeLists.txt b/llvm/CMakeLists.txt
index 1234567..abcdefg 100644
--- a/llvm/CMakeLists.txt
+++ b/llvm/CMakeLists.txt
@@ -450,6 +450,7 @@ set(LLVM_ALL_TARGETS
   PowerPC
   RISCV
   Sparc
+  SLOW32
   SystemZ
   VE
   WebAssembly
diff --git a/llvm/lib/Target/CMakeLists.txt b/llvm/lib/Target/CMakeLists.txt
index 1234567..abcdefg 100644
--- a/llvm/lib/Target/CMakeLists.txt
+++ b/llvm/lib/Target/CMakeLists.txt
@@ -20,6 +20,7 @@ add_subdirectory(PowerPC)
 add_subdirectory(RISCV)
 add_subdirectory(Sparc)
+add_subdirectory(SLOW32)
 add_subdirectory(SystemZ)
 add_subdirectory(VE)
 add_subdirectory(WebAssembly)
diff --git a/llvm/lib/Support/Triple.cpp b/llvm/lib/Support/Triple.cpp
index 1234567..abcdefg 100644
--- a/llvm/lib/Support/Triple.cpp
+++ b/llvm/lib/Support/Triple.cpp
@@ -45,6 +45,7 @@ public:
     riscv32,        // RISC-V (32-bit): riscv32
     riscv64,        // RISC-V (64-bit): riscv64
     sparc,          // Sparc: sparc
+    slow32,         // SLOW-32: slow32
     sparcv9,        // Sparcv9: Sparcv9
     systemz,        // SystemZ: s390x
     tce,            // TCE (http://tce.cs.tut.fi/): tce
@@ -200,6 +201,7 @@ StringRef Triple::getArchTypeName(ArchType Kind) {
   case riscv32:        return "riscv32";
   case riscv64:        return "riscv64";
   case sparc:          return "sparc";
+  case slow32:         return "slow32";
   case sparcv9:        return "sparcv9";
   case systemz:        return "systemz";
   case tce:            return "tce";
@@ -500,6 +502,7 @@ static Triple::ArchType parseArch(StringRef ArchName) {
     .Case("riscv32", Triple::riscv32)
     .Case("riscv64", Triple::riscv64)
     .Case("sparc", Triple::sparc)
+    .Case("slow32", Triple::slow32)
     .Case("sparcv9", Triple::sparcv9)
     .Case("sparcel", Triple::sparcel)
     .Case("systemz", Triple::systemz)
@@ -850,6 +853,7 @@ static unsigned getArchPointerBitWidth(llvm::Triple::ArchType Arch) {
   case llvm::Triple::riscv32:
   case llvm::Triple::sparc:
   case llvm::Triple::sparcel:
+  case llvm::Triple::slow32:
   case llvm::Triple::tce:
   case llvm::Triple::tcele:
   case llvm::Triple::thumb:
@@ -920,6 +924,7 @@ Triple::ObjectFormatType Triple::getDefaultFormat(const Triple &T) {
   case Triple::riscv64:
   case Triple::sparc:
   case Triple::sparcv9:
+  case Triple::slow32:
   case Triple::systemz:
   case Triple::tce:
   case Triple::tcele:
@@ -1440,6 +1445,7 @@ static unsigned getArchPointerBitWidth(llvm::Triple::ArchType Arch) {
   case llvm::Triple::ppc:
   case llvm::Triple::r600:
   case llvm::Triple::riscv32:
+  case llvm::Triple::slow32:
   case llvm::Triple::sparc:
   case llvm::Triple::sparcel:
   case llvm::Triple::tce:
diff --git a/llvm/include/llvm/BinaryFormat/ELF.h b/llvm/include/llvm/BinaryFormat/ELF.h
index 1234567..abcdefg 100644
--- a/llvm/include/llvm/BinaryFormat/ELF.h
+++ b/llvm/include/llvm/BinaryFormat/ELF.h
@@ -310,6 +310,9 @@ enum {
   EM_RISCV = 243,       // RISC-V
   EM_LANAI = 244,       // Lanai 32-bit processor
   EM_BPF = 247,         // Linux kernel bpf virtual machine
+  
+  // Provisional/unofficial machine types
+  EM_SLOW32 = 0x5332,   // SLOW-32 32-bit processor ('S2' in hex)
 
   // EM_CSKY is an official value, but we also support the original value
   // for compatibility reasons.