# Clang Integration Patch for SLOW-32
# Apply with: patch -p1 < clang-integration-examples.patch
# From the llvm-project root directory
# After copying clang-support/SLOW32.* to clang/lib/Basic/Targets/

# ============================================================================
# File: clang/lib/Basic/Targets.cpp
# Location 1: Around line 45, in the include section
# Add include alphabetically with other targets
# ============================================================================

--- a/clang/lib/Basic/Targets.cpp
+++ b/clang/lib/Basic/Targets.cpp
@@ -40,16 +40,17 @@
 #include "Targets/PNaCl.h"
 #include "Targets/PPC.h"
 #include "Targets/RISCV.h"
+#include "Targets/SLOW32.h"
 #include "Targets/SPIR.h"
 #include "Targets/Sparc.h"
 #include "Targets/SystemZ.h"

# ============================================================================
# File: clang/lib/Basic/Targets.cpp
# Location 2: Around line 600, in AllocateTarget() function
# Add case in the large switch statement, alphabetically by architecture
# Context shown includes surrounding cases
# ============================================================================

@@ -595,11 +596,14 @@ std::unique_ptr<TargetInfo> AllocateTarget(const llvm::Triple &Triple,
   case llvm::Triple::shave:
     return std::make_unique<ShaveTargetInfo>(Triple, Opts);
 
+  case llvm::Triple::slow32:
+    return std::make_unique<SLOW32TargetInfo>(Triple, Opts);
+
   case llvm::Triple::sparc:
     switch (os) {
     case llvm::Triple::Linux:
       return std::make_unique<LinuxTargetInfo<SparcV8TargetInfo>>(Triple, Opts);
     case llvm::Triple::Solaris:
       return std::make_unique<SolarisTargetInfo<SparcV8TargetInfo>>(Triple, Opts);
     case llvm::Triple::NetBSD:
       return std::make_unique<NetBSDTargetInfo<SparcV8TargetInfo>>(Triple, Opts);
     case llvm::Triple::OpenBSD:
       return std::make_unique<OpenBSDTargetInfo<SparcV8TargetInfo>>(Triple, Opts);
     case llvm::Triple::RTEMS:
       return std::make_unique<RTEMSTargetInfo<SparcV8TargetInfo>>(Triple, Opts);
     default:
       return std::make_unique<SparcV8TargetInfo>(Triple, Opts);
     }

# ============================================================================
# File: clang/lib/Basic/Targets/CMakeLists.txt
# Location: Around line 20, in the source file list
# Add SLOW32.cpp alphabetically
# ============================================================================

--- a/clang/lib/Basic/Targets/CMakeLists.txt
+++ b/clang/lib/Basic/Targets/CMakeLists.txt
@@ -15,16 +15,17 @@ add_clang_library(clangBasicTargets
   PNaCl.cpp
   PPC.cpp
   RISCV.cpp
+  SLOW32.cpp
   SPIR.cpp
   Sparc.cpp
   SystemZ.cpp

# ============================================================================
# File: clang/lib/Driver/ToolChains/Gnu.cpp (Optional)
# Location: Around line 2500, in getMultiarchTriple() function
# Add SLOW32 triple support for library paths
# This is optional but helps with finding runtime libraries
# ============================================================================

--- a/clang/lib/Driver/ToolChains/Gnu.cpp
+++ b/clang/lib/Driver/ToolChains/Gnu.cpp
@@ -2495,11 +2496,13 @@ static std::string getMultiarchTriple(const Driver &D,
   case llvm::Triple::riscv32:
     if (IsAndroid)
       return "riscv32-linux-android";
     return "riscv32-linux-gnu";
   case llvm::Triple::riscv64:
     if (IsAndroid)
       return "riscv64-linux-android";
     return "riscv64-linux-gnu";
+  case llvm::Triple::slow32:
+    return "slow32-unknown-none";
   case llvm::Triple::systemz:
     return "s390x-linux-gnu";

# ============================================================================
# IMPORTANT: After applying patches, copy the Clang support files:
# cp clang-support/SLOW32.h clang/lib/Basic/Targets/
# cp clang-support/SLOW32.cpp clang/lib/Basic/Targets/
# ============================================================================