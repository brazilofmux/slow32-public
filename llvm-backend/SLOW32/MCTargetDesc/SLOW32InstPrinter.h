//===-- SLOW32InstPrinter.h - SLOW32 MCInst Printer -----------*- C++ -*-===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//

#ifndef LLVM_LIB_TARGET_SLOW32_MCTARGETDESC_SLOW32INSTPRINTER_H
#define LLVM_LIB_TARGET_SLOW32_MCTARGETDESC_SLOW32INSTPRINTER_H

#include "llvm/MC/MCInstPrinter.h"

namespace llvm {
class SLOW32InstPrinter : public MCInstPrinter {
public:
  SLOW32InstPrinter(const MCAsmInfo &MAI, const MCInstrInfo &MII,
                    const MCRegisterInfo &MRI)
      : MCInstPrinter(MAI, MII, MRI) {}

  void printInst(const MCInst *MI, uint64_t Address, StringRef Annot,
                 const MCSubtargetInfo &STI, raw_ostream &O) override;
  
  void printRegName(raw_ostream &O, MCRegister Reg) override;
  
  void printOperand(const MCInst *MI, unsigned OpNum, const MCSubtargetInfo &STI, raw_ostream &O);
  void printBranchTarget(const MCInst *MI, unsigned OpNum, const MCSubtargetInfo &STI, raw_ostream &O);
  
  // Auto-generated by TableGen
  std::pair<const char *, uint64_t> getMnemonic(const MCInst &MI) const override;
  void printInstruction(const MCInst *MI, uint64_t Address, const MCSubtargetInfo &STI, raw_ostream &O);
  static const char *getRegisterName(MCRegister Reg);
};
} // end namespace llvm

#endif